@comment @itemize @w{}
@comment @item

Changes and New Features in 19.04 (unreleased):
@itemize @bullet

@item ESS[R]: Add support for R projects and start R by default in the project folder.

@item ESS[R]: Backticked symbols in the process buffer are no
longer fontified as strings.

@item ESS[R]: @code{ess-command} now runs R code in a sandboxed environment.
Use @code{.ess.environment()} to inspect the current environment.

@item ESS[R]: Added support for new syntax in R 4.0 and R 4.1.
This concerns raw strings, lambda functions, and the pipe operator.

@item ESS[R]: Highlight error locations in rlang style backtraces

@item ESS[R]: Fixed issue that caused ESS-help to hang when usage blocks
include R comments (#1025). Fix contributed by Bill Evans.

@item ESS: New @code{ess-elisp-trace-mode} minor mode.
Toggle it to start or stop tracing all @code{ess}-prefixed functions
with @code{trace-function}. Tracing is useful for debugging background
ESS behaviour.

@item ESS[R]: @code{ess-get-help-aliases-list} now caches the aliases
on the R side. This should speed up help lookup when the search path has
changed and the aliases are read again.

@item ESS: @code{ess-command} now uses a default timeout of 30 seconds.
It should normally be avoided with long-running tasks because it causes
Emacs to block while the command is running. If the timeout is reached,
an error is thrown. An interrupt is also sent to the process in case of early
exit.

This is a behaviour change: you will now have to explicitly opt in
blocking the whole Emacs UI for more than 30 seconds by supplying a
larger timeout (use @code{most-positive-fixnum} for infinity).

@item ESS: @code{ess-wait-for-process} now returns nil if a timeout is
reached.

@item ESS: @code{ess-get-words-from-vector} gains a @code{timeout} argument.

@item ESS[R]: Fixed performance issue with argument completions.
The help summary for the argument is no longer displayed in the
echo area. This fixes delays and hangs (#1062).

@item ESS[R]: @code{ess-command} is now more robust and resilient to hangs
and custom prompts (#1043). It also strips continuation prompts (@code{+}
prompts) automatically and reliably (#1116).

@item ESS[R]: @code{ess-command} now handles sinked consoles correctly.

@item ESS[R]: @code{ess-command} no longer changes @code{.Last.value}.
As a result, background tasks like completions no longer affect
the last value binding (#1058).

@item ESS[R]: Namespaced evaluation is disable in roxygen examples (#1026).
Part of this change is that namespaced evaluation has become a
buffer-local rather than process-local setting (#1046). This makes it
possible to disable namespaced evaluation in specific buffers or
contexts.

@item iESS: Inferior processes can now properly reuse frames (#987).
Fixed issue that caused the current buffer to be incorrectly displayed
in the new frame when @code{display-buffer} is set to pop up frames.

@item ESS[R]: Better support for tramp.
Fixed package evaluation on remote servers with Tramp (#950);
process reloading (#1001); and an evaluation issue (#1024).
These fixes were contributed by David Pritchard.

@item ESS[R]: Automatic offsetting of R process output is now disabled by default
because it produces undesirable output in some situations. To re-enable,
set @code{inferior-ess-fix-misaligned-output} to t.

@item ESS[R]: Improved @code{xref} lookup (@kbd{M-.}).
Function locations are now always detected for package libraries listed
in @code{ess-r-package-library-paths}.

@item ESS[R]: Evaluated lines starting with the Roxygen prefix
are now always stripped from the prefix, so they can be sent to the
process easily. Previously, this was only the case inside the
@code{examples} field. Since roxygen is switching to R markdown, it
becomes useful to evaluate chunks of R outside examples.
  
@item stata support is now obsolete since we were unable to elicit
FSF paperwork from some of the original authors: see the lisp/obsolete
sub-directory on the ESS github repo

@item @code{ess-set-working-directory} no longer changes the active
directory (as defined by the buffer-local variable
@code{default-directory}) of the buffer where the command is called.
Instead, the active directory of the inferior buffer is updated to the
new working directory.

@item The default of ess-eval-visibly is now @code{'nowait}.
With this change you should no longer experience freezes while
evaluating code.

@item ESS[R]: There is a new menu entry for reloading the R process.
It is otherwise bound to @code{C-c C-e C-r}. Reloading now reuses the
same process name and start arguments that were used to start the
process.

@item iESS: Process runners now return the inferior buffer.
Note that callers of inferior runners should not assume that the current
buffer has been set to the inferior buffer. Instead, use
@code{with-current-buffer} with the return value of the inferior.

@item iESS[SAS]: The SAS keymap was only set in iESS buffers
called `*SAS*`. This is now fixed.

@item ESS[R]: Fixed longstanding indentation issues involving
@code{::} and @code{:::} operators.

@item Implement a more reliable check for the process busy state.
Background actions such as completion and directory synchronization
should not block the process and should not cause printing of the
extraneous output to the interpreter.

@item Activate @code{goto-address-mode} for url and email highlighting in inferior buffers.

@item @code{smart-underscore} and @code{ess-smart-S-assign-key} have been removed.
Users who liked the previous behavior (i.e. underscore inserting ``<-'')
should bind @code{ess-insert-assign} to the underscore in their Emacs
initialization file. For example, @code{(define-key ess-r-mode-map "_"
#'ess-insert-assign)} and @code{(define-key inferior-ess-r-mode-map "_"
#'ess-insert-assign)} will activate it in all ESS R buffers.

@item ESS major modes are now defined using 'define-derived-mode'.
This makes ESS major modes respect modern conventions such as having
<language>-mode-hook and <language>-mode-map. Users are encouraged to
place customizations under the appropriate mode.

@item New option ess-auto-width controls setting the width option on window changes.
Users can change it to 'frame, 'window, or an integer. See the
documentation for details. @code{ess-auto-width-visible} controls
visibility.

@item ESS now respects @code{display-buffer-alist}.
Users can now use @code{display-buffer-alist} to manage how and where
windows appear. For more information and examples, see @xref{Controlling
buffer display,,, ess}.

@item @code{ess-roxy-mode} can now be enabled in non-R buffers.
This is primarily intended to support roxygen documentation for cpp
buffers. Preview functionality is not supported outside R buffers.

@item ESS[R]: DESCRIPTION files now open in @code{conf-colon-mode}.

@item @code{ess-style} now has effects when set as a file or directory local variable.

@item @code{ess-default-style} is now obsolete, use @code{ess-style} instead.

@item Options for 'ess-gen-proc-buffer-name-function' have been renamed.
ess-gen-proc-buffer-name:projectile-or-simple was renamed to
ess-gen-proc-buffer-name:project-or-simple and
ess-gen-proc-buffer-name:projectile-or-directory was renamed to
ess-gen-proc-buffer-name:project-or-directory. As the name suggests,
these now rely on project.el (included with Emacs) rather than
projectile.el, which is a third-party package.

@item Eldoc fully honors @code{eldoc-echo-area-use-multiline-p}

@item ESS[R]: @code{ess-r-rhub-check-package} gained new @code{RECOMMENDED}.

@item ESS[R]: devtools commands ask about saving modified buffers before running.
Users can disable the questioning with @code{ess-save-silently}.

@item ESS[R] help pages now provide links to other help topics.
This is similar with what you would see with, for example
@code{options(help_type = ``html'')} but works with the plain-text
version as well. This only works with @code{options(useFancyQuotes =
TRUE)} (the default).

@item @code{ess-rdired} buffers now derive from tabulated-list-mode.
They should look better and be a bit faster overall. The size column
now displays object sizes in bytes.

@item @code{ess-rdired} buffers now auto-update.
The frequency is governed by the new option
@code{ess-rdired-auto-update-interval}.

@item ESS[R]: @code{electric-layout-mode} is now supported.
This automatically inserts a newline after an opening curly brace in R
buffers. To enable it, customize @code{ess-r-mode-hook}.

@item ESS[R]: imenu now supports assignment with the equals sign.

@item ESS[Rd]: Rd no longer writes abbrevs to user's abbrev file.

@item ESS removed support for many unused languages.
This includes old versions of S+, ARC, OMG, VST, and XLS.

@item ess-r-runner-prefixes was modified to find R-4 and later.

@item ESS no longer activates eldoc if the user has disabled global-eldoc-mode.

@end itemize

The following have been made obsolete or removed, see their
documentation for more detail:

@itemize @bullet

@item Libraries for literate data analysis are obsolete and not loaded by default.
This includes @code{ess-noweb}, @code{ess-swv}, and related
functionality like @code{Rnw-mode}. Users are encouraged to switch to
one of several other packages that deal with these modes. For example,
polymode @url{https://github.com/polymode/poly-R/},
@url{https://polymode.github.io/}, or markdown-mode with edit-indirect
@url{https://jblevins.org/projects/markdown-mode}.

@item Support for @code{auto-complete} is obsolete.
The @code{auto-complete} package is unmaintained and so ESS support is
now obsolete. Users are encouraged to switch to @code{company-mode}
instead.

@item User options for controlling display of buffers.
This includes @code{ess-show-buffer-action},
@code{inferior-ess-same-window}, @code{inferior-ess-own-frame}, and
@code{inferior-ess-frame-alist}. See above about ESS respecting
@code{display-buffer-alist}.

@item Variables @code{ess-tab-always-indent} and @code{ess-tab-complete-in-script}.
Use the Emacs-wide setting of @code{tab-always-indent} instead.

@item @code{inferior-ess-*-start-file} variables.
All modes except Stata did not respect customization of this variable.
In order to load a file on startup, you should put a function on
@code{ess-*-post-run-hook}.

@end itemize

Bug Fixes in 18.10.3:
@itemize @bullet
@item More @file{Makefile} fixes, notably installing @file{*.el}s.
@end itemize

Bug Fixes in 18.10.2:
@itemize @bullet
@item @ESS{[R]} Fix namespace evaluation in non-installed packages.
Evaluation is directed into GlobalEnv as originally intended.
@item @file{Makefile} fixes, notably for @code{make install} and including
full docs in the tarballs.
@end itemize

Bug Fixes in 18.10-1:
@itemize @bullet
@item New functions @code{ess-eval-line-visibly-and-step} (@kbd{C-c C-n} and @code{ess-eval-region-or-line-visibly-and-step} (@kbd{C-RET})
which behave as the old versions of @code{ess-eval-line-and-step} and @code{ess-eval-region-or-line-and-step}.

@end itemize

Changes and New Features in 18.10:
@itemize @bullet

@item This is the last release to support Emacs older than 25.1.
Going forward, only GNU Emacs 25.1 and newer will be supported. Soon
after this release, support for older Emacs versions will be dropped
from the git master branch. Note that MELPA uses the git master branch
to produce ESS snapshots, so if you are using Emacs < 25.1 from MELPA
and are unable to upgrade, you should switch to MELPA-stable.

@item ESS now displays the language dialect in the mode-line.
So, for example, R buffers will now show ESS[R] rather than ESS[S].

@item The ESS manual has been updated and revised.

@item The ESS initialization process has been further streamlined.
If you update the autoloads (which installation from
@code{package-install} does), you should not need to @code{(require
'ess-site)} at all, as autoloads should automatically load ESS when it
is needed (e.g. the first time an R buffer is opened). In order to defer
loading your ESS config, you may want to do something like
@code{(with-require-after-load "ess" <ess-config-here>)} in your Emacs
init file. Users of the popular @code{use-package} Emacs package can now
do @code{(use-package ess :defer t)} to take advantage of this behavior.
For more information on this feature, see @xref{Activating and Loading
ESS,,, ess,}.

@item ESS now respects Emacs conventions for keybindings.
This means that The @code{C-c [letter]} bindings have been
removed. This affects @code{C-c h}, which was bound to
@code{ess-eval-line-and-step-invisibly} in @code{sas-mode-local-map};
@code{C-c f}, which was bound to @code{ess-insert-function-outline} in
@code{ess-add-MM-keys}; and @code{C-c h}, which was bound to
@code{ess-handy-commands} in @code{Rd-mode-map},
@code{ess-noweb-minor-mode-map}, and @code{ess-help-mode-map}

@item Functions @code{ess-eval-line-and-step} and @code{ess-eval-region-or-line-and-step}
now behave consistently with other evaluation function inside a package.

@item @ESS{[R]}: @code{ess-r-package-use-dir} now works with any mode.
This sets the working directory to the root of the current package
including for example C or C++ files within @code{/src}).

@item @ESS{[R]}: Long + + prompts in the inferior no longer offset output.

@item @ESS{[R]}: New option @code{strip} for @code{inferior-ess-replace-long+}.
This strips the entire + + sequence.

@item ESS modes now inherit from @code{prog-mode}.
In the next release, ESS modes will use @code{define-derived-mode} so
that each mode will have (for example) its own hooks and keymaps.

@item @ESS{[R]}: Supports flymake in R buffers for Emacs 26 and newer.
Users need to install the @code{lintr} package to use it. Customizable
options include @code{ess-use-flymake}, @code{ess-r-flymake-linters},
and @code{ess-r-flymake-lintr-cache}.

@item @ESS{[R]}: Gained support for xref in Emacs 25+
@xref{Xref,,, emacs, The Gnu Emacs Reference Manual}.

@item @ESS{[R]}: The startup screen is cleaner.
It also displays the startup directory with an explicit @code{setwd()}.

@item @ESS{[R]}: Changing the working directory is now always reflected in the process buffer.

@item @ESS{[R]}: @code{Makevars} files open with @code{makefile-mode}.

@item New variable @code{ess-write-to-dribble}.
This allows users to disable the dribble (@code{*ESS*}) buffer if they wish.

@item All of the @code{*-program-name} variables have been renamed to @code{*-program}.
Users who previously customized e.g. @code{inferior-ess-R-program-name}
will need to update their customization to
@code{inferior-ess-R-program}. These variables are treated as risky
variables.

@item @code{ess-smart-S-assign} was renamed to @code{ess-insert-assign}.
It provides similar functionality but for any keybinding, not just `_`.
For instance if you bind it to `;`, repeated invocations cycle through
between assignment and inserting `;`.

@item @code{C-c C-=} is now bound to @code{ess-cycle-assign} by default.
See the documentation for details. New user customization option
@code{ess-assign-list} controls which assignment operators are cycled.

@item @ESS{[R]} In remote sessions, the ESSR package is now fetched from GitHub.

@item Commands that send the region to the inferior process now deal with rectangular regions.
See the documentation of @code{ess-eval-region} for details. This only
works on Emacs 25.1 and newer.

@item @ESS{[R]}: Improvements to interacting with iESS in non-R files.
Interaction with inferior process in non-R files within packages (for
instance C or C++ files) has been improved. This is a work in
progress.

@item @ESS{[R]}: Changing the working directory is now always reflected in the process buffer.

@item @ESS{[JAGS]}: *.jog and *.jmd files no longer automatically open in JAGS mode.

@end itemize
Many improvements to fontification:

@itemize @bullet

@item Improved customization for faces.
ESS now provides custom faces for (nearly) all faces used and places
face customization options into their own group. Users can customize
these options using @kbd{M-x customize-group RET ess-faces}.

@item Many new keywords were added to @code{ess-R-keywords} and @code{ess-R-modifiers}.
See the documentation for details.

@item @ESS{[R]}: @code{in} is now only fontified when inside a @code{for} construct.
This avoids spurious fontification, especially in the output buffer
where `in` is a common English word.

@item @ESS: Font-lock keywords are now generated lazily.
That means you can now add or remove keywords from variables like
@code{ess-R-keywords} in your Emacs configuration file after loading
ESS (i.e. in the @code{:config} section for @code{use-package} users).

@item @ESS{[R]}: Fontification of roxygen @code{@@param} keywords now supports comma-separated parameters.

@item @ESS{[R]}: Certain keywords are only fontified if followed by a parenthesis.
Function-like keywords such as @code{if ()} or
@code{stop()} are no longer fontified as keyword if not followed by an
opening parenthesis. The same holds for search path modifiers like
@code{library()} or @code{require()}.

@item @ESS{[R]}: Fixed fontification toggling.
Especially certain syntactic elements such as @code{%op%} operators
and backquoted function definitions.

@item @ESS{[R]}: @code{ess-font-lock-toggle-keyword} can be called interactively.
This command asks with completion for a font-lock group to toggle.
This functionality is equivalent to the font-lock menu.

@end itemize

Notable bug fixes:

@itemize @bullet

@item @code{prettify-symbols-mode} no longer breaks indentation.
This is accomplished by having the pretty symbols occupy the same
number of characters as their non-pretty cousins.  You may customize
the new variable @code{ess-r-prettify-symbols} to control this
behavior.

@item @ESS{}: Inferior process buffers are now always displayed on startup.
Additionally, they don't hang Emacs on failures.
@end itemize

Obsolete libraries, functions, and variables:

@itemize @bullet

@item The @code{ess-r-args.el} library has been obsoleted and will be removed in the next release.
Use @code{eldoc-mode} instead, which is on by default.

@item Functions and options dealing with the smart assign key are obsolete.
The following functions have been made obsolete and will be removed in
the next release of ESS: @code{ess-smart-S-assign},
@code{ess-toggle-S-assign}, @code{ess-toggle-S-assign-key},
@code{ess-disable-smart-S-assign}.

The variable @code{ess-smart-S-assign-key} is now deprecated and will
be removed in the next release. If you would like to continue using
`_` for inserting assign in future releases, please bind
@code{ess-insert-assign} in @code{ess-mode-map} the normal way.

@item @ESS{[S]}: Variable @code{ess-s-versions-list} is obsolete and ignored.
Use @code{ess-s-versions} instead. You may pass arguments by starting
the inferior process with the universal argument.

@end itemize

Changes and New Features in 17.11:
@itemize @bullet

@item The ESS initialization process has been streamlined. You can now
load the R and Stata modes independently from the rest of ESS. Just put
@code{(require 'ess-r-mode)} or @code{(require 'ess-stata-mode)} in your
init file. This is for experienced Emacs users as this requires setting
up autoloads for @code{.R} files manually. We will keep maintaining
@code{ess-site} for easy loading of all ESS features.

@item Reloading and quitting the process is now more robust. If no
process is attached, ESS now switches automatically to one (prompting
you for selection if there are several running). Reloading and quitting
will now work during a debug session or when R is prompting for input
(for instance after a crash). Finally, the window configuration is saved
and restored after reloading to prevent the buffer of the new process
from capturing the cursor.

@item @ESS{[R]}: New command @code{ess-r-package-use-dir}. It sets the
working directory of the current process to the current package directory.

@item @ESS{[R]} Lookup for references in inferior buffers has been
improved. New variable @code{ess-r-package-source-roots} contains
package sub-directories which are searched recursively during the file
lookup point. Directories in @code{ess-tracebug-search-path} are now
also searched recursively.

@item @ESS{[R]} Namespaced evaluation is now automatically enabled only
in the @code{R/} directory. This way ESS will not attempt to update
function definitions from a package if you are working from e.g. a test
file.

@end itemize


Changes and New Features in 16.10:
@itemize @bullet

@item @ESS{[R]}: Syntax highlighting is now more consistent. Backquoted
names are not fontified as strings (since they really are identifiers).
Furthermore they are now correctly recognized when they are function
definitions or function calls.
@item @ESS{[R]}: Backquoted names and @code{%op%} operators are
recognized as sexp. This is useful for code navigation, e.g. with
@kbd{C-M-f} and @kbd{C-M-b}.
@item @ESS{[R]}: Integration of outline mode with roxygen examples fields.
You can use outline mode's code folding commands to fold the examples
field. This is especially nice to use with well documented packages with
long examples set. Set @code{ess-roxy-fold-examples} to non-nil to
automatically fold the examples field when you open a buffer.
@item @ESS{[R]}: New experimental feature: syntax highlighting in
roxygen examples fields. This is turned off by default. Set
@code{ess-roxy-fontify-examples} to non-nil to try it out.
@item @ESS{[R]}: New package development command @code{ess-r-devtools-ask}
bound to @kbd{C-c C-w C-a}. It asks with completion for any devtools
command that takes @code{pkg} as argument.
@item @ESS{[R]}: New command @kbd{C-c C-e C-r} to reload the inferior process.
Currently only implemented for R. The R method runs @code{inferior-ess-r-reload-hook}
on reloading.
@item @ESS{[R]}: @code{ess-r-package-mode} is now activated in non-file buffers as well.
@end itemize

Bug fixes in 16.10:
@itemize @bullet
@item @ESS{[R]}: Fix broken (un)flagging for debugging inside packages
@item @ESS{[R]}: Fixes (and improvements) in Package development
@item @ESS{[R]}: Completion no longer produces @code{...=} inside @code{list(  )}.
@item @ESS{[R]}: Better debugging and tracing in packages.
@item @ESS{[R]}: Better detection of symbols at point.
@item @ESS{[R]}: No more spurious warnings on deletion of temporary files.
@item @ESS{[julia]}: help and completion work (better)
@item @ESS{[julia]}: available via @code{ess-remote}
@end itemize

Changes and New Features in 16.04:
@itemize @bullet

@item @ESS{[R]}: @code{developer} functionality has been refactored.
The new user interface consists of a single command
@code{ess-r-set-evaluation-env} bound by default to @kbd{C-c C-t
C-s}. Once an evaluation environment has been set with, all subsequent
ESS evaluation will source the code into that environment. By default,
for file within R packages the evaluation environment is set to the
package environment. Set @code{ess-r-package-auto-set-evaluation-env} to
@code{nil} to disable this.
@item @ESS{[R]}: New @code{ess-r-package-mode}
This development mode provides features to make package development
easier. Currently, most of the commands are based on the @code{devtools}
packages and are accessible with @kbd{C-c C-w} prefix. See the
documentation of @code{ess-r-package-mode} function for all available
commands. With @kbd{C-u} prefix each command asks for extra arguments to
the underlying devtools function. This mode is automatically enabled in
all files within R packages and is indicated with @code{[pkg:NAME]} in
the mode-line.
@item @ESS{[R]}: Help lookup has been improved.
It is now possible to get help for namespaced objects such as
pkg::foobar. Furthermore, ESS recognizes more reliably when you change
@code{options('html_type')}.
@item @ESS{[R]}: New specialized breakpoints for debugging magrittr pipes
@item @ESS{}: ESS now implements a simple message passing interface
to communicate between ESS and inferior process.
@end itemize

Bug fixes in 16.04:
@itemize @bullet
@item @ESS{[R]}: Roxygen blocks with backtics are now correctly filled
@item @ESS{[R]}: Don't skip breakpoints in magrittr's @code{debug_pipe}
@item @ESS{[R]}: Error highlighting now understands `testthat` type errors
@item @ESS{[Julia]}: Added getwd and setwd generic commands
@end itemize


